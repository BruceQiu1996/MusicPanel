<Window x:Class="BruceMusicDownloader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BruceMusicDownloader"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        WindowStyle="None"
        WindowChrome.WindowChrome="{DynamicResource WindowChromeKey}"
        Title="MainWindow" Height="680" Width="1000">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding LoadCommand}"></command:EventToCommand>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <WindowChrome x:Key="WindowChromeKey">
            <WindowChrome.ResizeBorderThickness>
                <Thickness>5</Thickness>
            </WindowChrome.ResizeBorderThickness>
            <WindowChrome.CaptionHeight>0</WindowChrome.CaptionHeight>
        </WindowChrome>

        <!--#region Indicator Style-->
        <Style x:Key="IndicatorStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#C62F2F"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}}"/>
            <Setter Property="Width" Value="4"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>

            <!--Shadow Effect for our indicator-->

            <!--But since we want our indicator to be visible only on mouse hover or list item selection-->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region Path Style which will be our Icon-->
        <Style x:Key="PathStyle" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="#686D83"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="Fill" Value="#333"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="Fill" Value="#333"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TxtStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="Foreground" Value="#333"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                    <Setter Property="Foreground" Value="#aaa"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="Foreground" Value="#333"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StackStyle" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="Background" Value="#ddd"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region Styling Listbox Item-->
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <!--to set the selected menu item on startup-->
            <Setter Property="IsSelected" Value="{Binding IsItemSelected,UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="ToolTip" Value="{Binding ToolTip,UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness
                            }" SnapsToDevicePixels="True">
                            <StackPanel Style="{StaticResource StackStyle}" Orientation="Horizontal"  Margin="-4,0,0,0">

                                <!--#region Left Side Indicator for our Button-->
                                <Border Style="{StaticResource IndicatorStyle}"/>
                                <!--#endregion-->

                                <!--#region Path - Icon-->
                                <Path Data="{Binding Path}" Margin="20 0 0 0" Style="{StaticResource PathStyle}"/>
                                <!--#endregion-->
                                <TextBlock Margin="10 0 0 0"  Style="{StaticResource TxtStyle}" Text="{Binding DisplayName}" VerticalAlignment="Center"></TextBlock>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding ListItemHeight}" Value="130">
                                <Setter Property="Height" Value="130"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="Focusable" Value="False"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Image Stretch="UniformToFill" Source="/Images/background.jpg"  Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.1"></Image>
        <Grid Grid.Row="0" Grid.ColumnSpan="2" Background="Transparent" MouseMove="Grid_MouseMove">
            
        </Grid>
        <Border BorderThickness="0 0 1 0" BorderBrush="#eee" Grid.Column="0" Grid.RowSpan="3"  Grid.Row="0">
            <StackPanel Margin="0 80 0 0">
                <TextBlock Text="在线音乐" FontSize="12" Margin="30 0 0 15" Foreground="#aaa"/>
                <ListBox ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden" SelectionMode="Single" Name="tab" Margin="-2 0 0 0"
                 ItemsSource="{Binding OnlineMenuItems}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <command:EventToCommand Command="{Binding MenuItemChangeCommand}" PassEventArgsToCommand="True"></command:EventToCommand>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>

                <TextBlock Text="我的音乐" Margin="30 40 0 15" FontSize="12" Foreground="#aaa"/>
                <ListBox ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden" SelectionMode="Single" Name="tab1" Margin="-2 0 0 0"
                 ItemsSource="{Binding MyMenuItems}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <command:EventToCommand Command="{Binding MenuItemChangeCommand}" PassEventArgsToCommand="True"></command:EventToCommand>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </StackPanel>
        </Border>

        <Frame Grid.Row="1" Grid.Column="1" NavigationUIVisibility="Hidden" Name="mainframe">
            
        </Frame>
    </Grid>
</Window>
